<ehcache>
    <!--diskStore:当内存缓存中对象数量超过maxElementsInMemory时,
        将缓存对象写到磁盘缓存中(需对象实现序列化接口) -->
    <diskStore path="java.io.tempdir" />

    <!--maxElementsInMemory:缓存最大个数-->
    <!--eternal : 对象是否永久有效，一但设置了，timeout将不起作用。 (必须设置)-->
    <!--overflowToDisk : 当缓存达到maxElementsInMemory值是,是否允许溢出到磁盘(必须设置)(内存不足时，是否启用磁盘缓存。)-->
    <!--timeToLiveSeconds="600" : 元素在缓存里存在的时间(秒为单位)，即当缓存存活600秒后销毁. 0 表示永远存在不过期-->
    <!--memoryStoreEvictionPolicy="LFU": 当达到maxElementsInMemory时,如何强制进行驱逐默认使用"最近使用(LRU)"策略,
    其它还有先入先出FIFO,最少使用LFU,较少使用LRU-->

    <!--其他配置:
    clearOnFlush : 内存数量最大时是否清除;
    diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒;
    diskPersistent="false" : 磁盘缓存在JVM重新启动时是否保持(默认为false);
    diskSpoolBufferSizeMB : 这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区;
    maxEntriesLocalHeap="1000" : 堆内存中最大缓存对象数,0没有限制(必须设置)-->
    <defaultCache maxElementsInMemory="1000" eternal="false"
                  timeToIdleSeconds="120" timeToLiveSeconds="120" overflowToDisk="true" />
    <cache name="ehcacheName" maxElementsInMemory="10000"
           eternal="false" timeToIdleSeconds="300000" timeToLiveSeconds="600000"
           overflowToDisk="true" memoryStoreEvictionPolicy="LRU" />
</ehcache>